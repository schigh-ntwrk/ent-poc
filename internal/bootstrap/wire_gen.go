// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package bootstrap

import (
	"context"

	"github.com/schigh-ntwrk/ent-poc/internal/config"
	"github.com/schigh-ntwrk/ent-poc/internal/services"

	_ "github.com/go-sql-driver/mysql"
)

// Injectors from wire.go:

func Up(ctx context.Context) (Dependencies, error) {
	configConfig, err := config.New()
	if err != nil {
		return Dependencies{}, err
	}
	client, err := NewEntClient(ctx, configConfig)
	if err != nil {
		return Dependencies{}, err
	}
	clinicService, err := services.NewClinic(client)
	if err != nil {
		return Dependencies{}, err
	}
	userService, err := services.NewUser(client)
	if err != nil {
		return Dependencies{}, err
	}
	customerService, err := services.NewCustomer(client)
	if err != nil {
		return Dependencies{}, err
	}
	veterinarianService, err := services.NewVeterinarian(client)
	if err != nil {
		return Dependencies{}, err
	}
	petService, err := services.NewPet(client)
	if err != nil {
		return Dependencies{}, err
	}
	appointmentService, err := services.NewAppointment(client)
	if err != nil {
		return Dependencies{}, err
	}
	server, err := NewServer(configConfig, clinicService, userService, customerService, veterinarianService, petService, appointmentService)
	if err != nil {
		return Dependencies{}, err
	}
	dependencies := NewDependencies(configConfig, client, server, clinicService, appointmentService, petService, userService, customerService, veterinarianService)
	return dependencies, nil
}
